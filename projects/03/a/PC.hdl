// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // reset = isReset
    Or(a=load, b=reset, out=resetOrLoadA, out=resetOrLoadB);
    Not(in=resetOrLoadA, out=notResetOrLoad);
    And(a=notResetOrLoad, b=inc, out=isInc); // isInc
    Not(in=reset, out=notReset);
    And(a=notReset, b=load, out=isLoad); // isLoad

    //Mux16(a=in, b=false, sel=reset, out=resetOut);
    //Register(in=foo, load=resetOrLoadB, out=stateOutA, out=stateOutB);
    //Inc16(in=stateOutA, out=foo, out=incOut);
    //Mux16(a=stateOutB, b=incOut, sel=isInc, out=out);

    Mux16(a=in, b=foo, sel=isInc, out=stateOutB);
    Register(in=stateOutB, load=isInc, out=stateOut);
    Inc16(in=stateOut, out=foo, out=out);
}
